import Head from 'next/head'
import React from 'react'
import Header from '../components/Header'
import BannerSlogan from '@components/BannerSlogan'
import Input from '@components/Input'
import { FormContainer } from '@styles/pages'
import Footer from '@components/Footer'
import Button from '@components/Button'
import Pill from '@components/Pill'
import Title from '@components/Title'
import { useForm } from 'react-hook-form'
import { zodResolver } from '@hookform/resolvers/zod'
import * as z from 'zod'
import { Logo } from '@components/Logo/Logo'

interface FormData {
  email: string
  subject: string
  content: string
  years: number
}

const schema = z.object({
  email: z
    .string()
    .email({
      message: 'E-mail inválido'
    })
    .min(10, {
      message: 'E-mail muito curto'
    }),
  subject: z
    .string()
    .min(10, {
      message: 'Assunto muito curto'
    })
    .max(64, {
      message: 'Assunto muito longo'
    }),
  content: z
    .string()
    .min(10, {
      message: 'Conteúdo muito curto'
    })
    .max(255, {
      message: 'Conteúdo muito longo'
    }),
  years: z.number().min(1).max(5)
})

const Home = () => {
  const {
    register,
    formState: { errors },
    watch,
    setValue
  } = useForm({
    resolver: zodResolver(schema),
    mode: 'all'
  })
  const { email, subject, content, years } = watch()
  const sendData = ({ email, subject, content, years }: FormData) => {
    fetch('/api/form', {
      method: 'POST',
      body: JSON.stringify({ email, subject, content, years })
    })
  }
  const handleSubmit = (data: FormData) => {
    try {
      sendData(data)
    } finally {
      setValue('email', '')
      setValue('subject', '')
      setValue('content', '')
      setValue('years', 0)
    }
  }
  const buttonDisabled =
    Object.keys(errors).length > 0 || !email || !subject || !content || !years

  return (
    <div>
      <Head>
        <title>iFuture</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div style={{ width: '100vw', minWidth: '375px' }}>
        <Header>
          <Logo />
        </Header>
        <BannerSlogan
          title="Escreva um e-mail para o futuro"
          subTitle="Se você pudesse enviar uma mensagem, igual aquelas capsulas
           do tempo em que você vê em filmes, o que você enviaria?"
        />
        <FormContainer>
          <Input
            label="Digite seu e-mail"
            placeholder="seuemail@email.com"
            name="email"
            register={register}
            errorMessage={errors.email?.message?.toString()}
          />
          <Input
            label="Digite o assunto do e-mail"
            placeholder="Assunto..."
            name="subject"
            register={register}
            counter={subject?.length || 0}
            maxLength={64}
            errorMessage={errors.subject?.message.toString()}
          />
          <Input
            label="Escreva a sua mensagem"
            placeholder="Querido futuro..."
            name="content"
            register={register}
            counter={content?.length || 0}
            maxLength={255}
            errorMessage={errors.content?.message.toString()}
          />
          <Title>Gostaria de receber quando?</Title>
          <div style={{ display: 'flex', gap: '16px', flexWrap: 'wrap' }}>
            <Pill onClick={() => setValue('years', 1)} isSelected={years === 1}>
              Em 1 ano
            </Pill>
            <Pill onClick={() => setValue('years', 3)} isSelected={years === 3}>
              Em 3 anos
            </Pill>
            <Pill onClick={() => setValue('years', 5)} isSelected={years === 5}>
              Em 5 anos
            </Pill>
          </div>
          <Button
            disabled={buttonDisabled}
            onClick={() => handleSubmit({ email, subject, content, years })}
          >
            Enviar e-mail para o futuro
            <svg
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M5 12H19"
                stroke="white"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
              <path
                d="M12 5L19 12L12 19"
                stroke="white"
                strokeWidth="2"
                strokeLinecap="round"
                strokeLinejoin="round"
              />
            </svg>
          </Button>
        </FormContainer>
      </div>
      <Footer />
    </div>
  )
}

export default Home
